workspace(name = "dependency_analyzer_test")

# Note: this should not need to be its own separate workspace except
# that we need to handle cross version tests. Once we can do this in
# a better way we should ditch this confusing mess.

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# bazel-skylib 0.8.0 released 2019.03.20 (https://github.com/bazelbuild/bazel-skylib/releases/tag/0.8.0)
skylib_version = "0.8.0"
http_archive(
    name = "bazel_skylib",
    type = "tar.gz",
    url = "https://github.com/bazelbuild/bazel-skylib/releases/download/{}/bazel-skylib.{}.tar.gz".format (skylib_version, skylib_version),
    sha256 = "2ef429f5d7ce7111263289644d233707dba35e39696377ebab8b0bc701f7818e",
)

local_repository(
    name = "io_bazel_rules_scala",
    # DO NOT CHANGE THE FOLLOWING LINE - test_thirdparty_version.sh looks for it
    path = "../../../.." # DO NOT CHANGE THIS LINE - SEE ABOVE
    # DO NOT CHANGE THE PREVIOUS LINE - SEE ABOVE
)

load("@io_bazel_rules_scala//scala:toolchains.bzl", "scala_register_unused_deps_toolchains")
scala_register_unused_deps_toolchains()

load("@io_bazel_rules_scala//scala:scala.bzl", "scala_repositories")

# DO NOT CHANGE THE FOLLOWING LINE - test_thirdparty_version.sh looks for it
scala_repositories() # DO NOT CHANGE THIS LINE - SEE ABOVE
# DO NOT CHANGE THE PREVIOUS LINE - SEE ABOVE

load("@bazel_tools//tools/build_defs/repo:jvm.bzl", "jvm_maven_import_external")

MAVEN_SERVER_URLS = [
    "https://jcenter.bintray.com",
    "https://repo1.maven.org/maven2",
]

# test of strict deps (scalac plugin UT + E2E)
jvm_maven_import_external(
    name = "com_google_guava_guava_21_0_with_file",
    artifact = "com.google.guava:guava:21.0",
    artifact_sha256 = "972139718abc8a4893fa78cba8cf7b2c903f35c97aaf44fa3031b0669948b480",
    server_urls = MAVEN_SERVER_URLS,
)

# bazel's java_import_external has been altered in rules_scala to be a macro based on jvm_import_external
# in order to allow for other jvm-language imports (e.g. scala_import)
# the 3rd-party dependency below is using the java_import_external macro
# in order to make sure no regression with the original java_import_external
load("@io_bazel_rules_scala//scala:scala_maven_import_external.bzl", "java_import_external")

java_import_external(
    name = "org_apache_commons_commons_lang_3_5_without_file",
    generated_linkable_rule_name = "linkable_org_apache_commons_commons_lang_3_5_without_file",
    jar_sha256 = "8ac96fc686512d777fca85e144f196cd7cfe0c0aec23127229497d1a38ff651c",
    jar_urls = ["https://repo.maven.apache.org/maven2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar"],
    licenses = ["notice"],  # Apache 2.0
    neverlink = True,
)
